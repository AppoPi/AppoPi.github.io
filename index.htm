<!doctype html>
<html lang="en">
<head>

</head>
<body>
 
<div style="text-align: justify">
  <h1>
    Sphere
  </h1>
 <div>

  Increments:
  <select id="sphere" onchange="sphere_change()">
    <option value="0.25">0.25</option>
    <option value="0.50">0.50</option>
  </select>

<script>
function sphere_change() {

  document.getElementById("sphere_left")
}
</script>

  Left Boundary:
    <select id=sphere_left>
      <option>-10.00</option><option>-9.75</option><option>-9.50</option><option>-9.25</option>
      <option>-9.00</option><option>-8.75</option><option>-8.25</option><option>-8.00</option>
      <option>-7.75</option><option>-7.50</option><option>-7.25</option><option>-7.00</option>
      <option>-6.75</option><option>-6.50</option><option>-6.25</option><option>-6.00</option>
      <option>-5.75</option><option>-5.50</option><option>-5.25</option><option>-5.00</option>
      <option>-4.75</option><option>-4.50</option><option>-4.25</option><option>-4.00</option>
      <option>-3.75</option><option>-3.50</option><option>-3.25</option><option>-3.00</option>
      <option>-2.75</option><option>-2.50</option><option>-2.25</option><option>-2.00</option>
      <option>-1.75</option><option>-1.50</option><option>-1.25</option><option>-1.00</option>
      <option>-0.75</option><option>-0.50</option><option>-0.25</option><option>+0.00</option>
      <option>+0.25</option><option>+0.50</option><option>+0.75</option><option>+1.00</option>
      <option>+1.25</option><option>+1.50</option><option>+1.75</option><option>+2.00</option>
      <option>+2.25</option><option>+2.50</option><option>+2.75</option><option>+3.00</option>
      <option>+3.25</option><option>+3.50</option><option>+3.75</option><option>+4.00</option>
      <option>+4.25</option><option>+4.50</option><option>+4.75</option><option>+5.00</option>
      <option>+5.25</option><option>+5.50</option><option>+5.75</option><option>+6.00</option>
      <option>+6.25</option><option>+6.50</option><option>+6.75</option><option>+7.00</option>
      <option>+7.25</option><option>+7.50</option><option>+7.75</option><option>+8.00</option>
      <option>+8.25</option><option>+8.50</option><option>+8.75</option><option>+9.00</option>
      <option>+9.25</option><option>+9.50</option><option>+9.75</option><option>+10.00</option>
    </select>
  Right Boundary:
    <select id=sphere_right>
      <option>-10.00</option><option>-9.75</option><option>-9.50</option><option>-9.25</option>
      <option>-9.00</option><option>-8.75</option><option>-8.25</option><option>-8.00</option>
      <option>-7.75</option><option>-7.50</option><option>-7.25</option><option>-7.00</option>
      <option>-6.75</option><option>-6.50</option><option>-6.25</option><option>-6.00</option>
      <option>-5.75</option><option>-5.50</option><option>-5.25</option><option>-5.00</option>
      <option>-4.75</option><option>-4.50</option><option>-4.25</option><option>-4.00</option>
      <option>-3.75</option><option>-3.50</option><option>-3.25</option><option>-3.00</option>
      <option>-2.75</option><option>-2.50</option><option>-2.25</option><option>-2.00</option>
      <option>-1.75</option><option>-1.50</option><option>-1.25</option><option>-1.00</option>
      <option>-0.75</option><option>-0.50</option><option>-0.25</option><option>+0.00</option>
      <option>+0.25</option><option>+0.50</option><option>+0.75</option><option>+1.00</option>
      <option>+1.25</option><option>+1.50</option><option>+1.75</option><option>+2.00</option>
      <option>+2.25</option><option>+2.50</option><option>+2.75</option><option>+3.00</option>
      <option>+3.25</option><option>+3.50</option><option>+3.75</option><option>+4.00</option>
      <option>+4.25</option><option>+4.50</option><option>+4.75</option><option>+5.00</option>
      <option>+5.25</option><option>+5.50</option><option>+5.75</option><option>+6.00</option>
      <option>+6.25</option><option>+6.50</option><option>+6.75</option><option>+7.00</option>
      <option>+7.25</option><option>+7.50</option><option>+7.75</option><option>+8.00</option>
      <option>+8.25</option><option>+8.50</option><option>+8.75</option><option>+9.00</option>
      <option>+9.25</option><option>+9.50</option><option>+9.75</option><option>+10.00</option>
    </select>
 </div>
</div>

 <br/>
 <div>
  Manufacturer: <input id="manufacturer" value="Johnson & Johnson" />
  Brand: <input id="brand" value="Acuvue Oasis 1-Day with HydraLuxe" />
 </div>
 <br/>

<button onclick=update_table()>Add</button>

<button onclick=clear_table()>Clear</button>

<br/><br/>

<table id="prescription_table" border="1px solid black">
  <th onclick="sort_table(0)">Sphere</th>
  <th onclick="sort_table(1)">Manufacturer</th>
  <th onclick="sort_table(2)">Brand</th>
  <th>Action</th>
</table>

<script>
document.getElementById("sphere_right").selectedIndex = "79";

function update_table() {

  var s = document.getElementById("sphere")
  var sselected = parseFloat(s.options[s.selectedIndex].value);

  var l = document.getElementById("sphere_left");
  var lselected = parseFloat(l.options[l.selectedIndex].value);

  var r = document.getElementById("sphere_right");
  var rselected = parseFloat(r.options[r.selectedIndex].value);

  var m = document.getElementById("manufacturer").value
  var b = document.getElementById("brand").value

  //var table = document.createElement('table');
  var table = document.getElementById("prescription_table");

  // var arrHead = new Array();
  // arrHead = ['Sphere', 'Manufacturer', 'Brand'];

  var arrValue = new Array();



  for(var i = lselected; i < rselected + 0.25; i += sselected) {
    console.log([i, m, b]);

    if (i < 0){
      arrValue.push([parseFloat(i).toFixed(2), m, b]);
    } else {
      arrValue.push(["+" + parseFloat(i).toFixed(2), m, b]);
    }
  }


  // for(var h = 0; h < arrHead.length; h++) {
  //   var th = document.createElement('th');
  //   th.innerHTML = arrHead[h];
  //   th.onclick = "do_something";
  //   tr.appendChild(th);
  // }

  for(var c = 0; c <= arrValue.length - 1; c++){
    var row = table.insertRow(1);

    // for(var j = 0; j < arrHead.length; j++){
      var td = document.createElement('td');
      var cell1 = row.insertCell(0);
      var cell2 = row.insertCell(1);
      var cell3 = row.insertCell(2);
      var cell4 = row.insertCell(3);
      cell1.innerHTML = arrValue[c][0];
      cell2.innerHTML = arrValue[c][1];
      cell3.innerHTML = arrValue[c][2];
      cell4.innerHTML = '<input type="button" value="Delete Row" onclick="delete_row(this)">';
    // }
  }

 // document.getElementById("prescription_table").innerHTML = table.innerHTML;
}


function sort_table(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("prescription_table");
  switching = true;
  // Set the sorting direction to ascending:
  dir = "asc";
  /* Make a loop that will continue until
  no switching has been done: */
  while (switching) {
    // Start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /* Loop through all table rows (except the
    first, which contains table headers): */
    for (i = 1; i < (rows.length - 1); i++) {
      // Start by saying there should be no switching:
      shouldSwitch = false;
      /* Get the two elements you want to compare,
      one from current row and one from the next: */
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /* Check if the two rows should switch place,
      based on the direction, asc or desc: */
      var value = x.innerHTML;

      if (!isNaN(value) && value.toString().indexOf('.') != -1)
      {
        if (dir == "asc") {
          if (parseFloat(x.innerHTML) > parseFloat(y.innerHTML)) {
            // If so, mark as a switch and break the loop:
            shouldSwitch = true;
            break;
          }
        } else if (dir == "desc") {
          if (parseFloat(x.innerHTML) < parseFloat(y.innerHTML)) {
            // If so, mark as a switch and break the loop:
            shouldSwitch = true;
            break;
          }
        }
      } else {
        if (dir == "asc") {
          if (x.innerHTML > y.innerHTML) {
            shouldSwitch = true;
            break;
          }
        } else if (dir == "desc"){
          if (x.innerHTML < y.innerHTML){
            shouldSwitch = true;
            break;
          }
        }
      }
    }
    if (shouldSwitch) {
      /* If a switch has been marked, make the switch
      and mark that a switch has been done: */
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      // Each time a switch is done, increase this count by 1:
      switchcount ++;
    } else {
      /* If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again. */
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}


function clear_table() {
  var table = document.getElementById("prescription_table");

  var rowCount = table.rows.length; while(--rowCount) table.deleteRow(rowCount); 
}



function delete_row(o) {
     var p=o.parentNode.parentNode;
     p.parentNode.removeChild(p);
}
</script>

</body>
</html>